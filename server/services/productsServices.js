import Product from '../models/Product.js';

// üü¢ GET /products ‚Äì –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏
export async function getAllProducts(categoryName) {
  const products = await Product.find()
    .populate('category', 'name')
    .lean();

  // –ê–∫–æ –∏–º–∞ –∑–∞–¥–∞–¥–µ–Ω–æ categoryName ‚Äì —Ñ–∏–ª—Ç—Ä–∏—Ä–∞–π –ø–æ –Ω–µ–≥–æ
  if (categoryName) {
    return products.filter(p => p.category?.name === categoryName);
  }

  return products;
}

export async function createProduct(data) {
  const product = new Product(data);
  return await product.save();
}

export async function getProductById(productId) {
  return await Product.findById(productId).lean();
}

export async function deleteProduct(productId, userId) {
  const product = await Product.findById(productId);

  if (!product) {
    throw new Error('–ü—Ä–æ–¥—É–∫—Ç—ä—Ç –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.');
  }

  if (product.owner.toString() !== userId) {
    throw new Error('–ù—è–º–∞—Ç–µ –ø—Ä–∞–≤–∞ –¥–∞ –∏–∑—Ç—Ä–∏–µ—Ç–µ —Ç–æ–∑–∏ –ø—Ä–æ–¥—É–∫—Ç.');
  }

  await Product.findByIdAndDelete(productId);
}

export async function editProduct(productId, productData, userId) {
  const product = await Product.findById(productId);

  if (!product) {
    throw new Error('–ü—Ä–æ–¥—É–∫—Ç—ä—Ç –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.');
  }

  if (product.owner.toString() !== userId) {
    throw new Error('–ù—è–º–∞—Ç–µ –ø—Ä–∞–≤–∞ –¥–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞—Ç–µ —Ç–æ–∑–∏ –ø—Ä–æ–¥—É–∫—Ç.');
  }

  Object.assign(product, productData);
  await product.save();
  return product;
}
